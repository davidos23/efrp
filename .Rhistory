}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame(nrow=n,ncol=2)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(as.numeric(as.Date(StartDate), origin="1970-01-01"), origin="1970-01-01")
}
return(TimeSeries)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
View(TimeSeries)
View(TimeSeries)
as.Date(as.numeric(as.Date(1989-01-01), origin="1970-01-01"), origin="1970-01-01")
as.Date(as.numeric(as.Date(1989-1-1), origin="1970-01-01"), origin="1970-01-01")
as.Date(as.numeric(as.Date(1989-1-1), origin="1970-01-01"), origin="1970-01-01")
as.Date(1999-02-10)-as.Date(1989-02-10)
as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01")
as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01"))
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01")))
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01")),origin="1970-01-01")
as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01")
)
as.numeric(as.Date(1999-02-10, origin="1970-01-01"))-10
as.date(as.numeric(as.Date(1999-02-10, origin="1970-01-01"))-10,origin="1970-01-01")
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01"))-10,origin="1970-01-01")
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01"))-10,origin="1999-02-01")
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01"))-10,origin="1970-01-01")
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01"))-10,origin="1969-12-22")
as.numeric(as.Date(1999-02-10, origin="1970-01-01")
)
as.numeric(as.Date(1999-02-10, origin="1970-01-01"))
as.Date(1987, origin=1970-01-01)
as.Date(1987, origin="1970-01-01")
as.numeric(as.Date(1999-02-10, origin="1970-01-01"))
as.numeric(as.Date(1999-02-11, origin="1970-01-01"))
as.numeric(as.Date(1999-02-12, origin="1970-01-01"))
as.numeric(as.Date(2001-01-01, origin="1970-01-01"))
as.numeric(as.Date(1999-03-12, origin="1970-01-01"))
as.numeric(as.Date(1999-02-12, origin="1970-01-01"))
as.numeric(as.Date(1999-02-13, origin="1970-01-01"))
as.numeric(as.Date(1999-02-14, origin="1970-01-01"))
as.numeric(as.Date(1999-02-28, origin="1970-01-01"))
as.numeric(as.Date(1999-03-01, origin="1970-01-01"))
?as.numeric
as.Date.numeric(as.Date(1999-03-01, origin="1970-01-01"))
as.Date.numeric(1999-03-01, origin="1970-01-01")
as.Date.numeric(1999-03-01, origin="1900-01-01")
as.Date.numeric(1999-03-01, origin="1995-01-01")
as.Date.numeric(1999-03-01, origin="1990-01-01")
as.Date.numeric(1999-03-01)
as.Date(1999-03-01)
as.Date(1999-03-01)
as.Date(1999-02-10, origin="1970-01-01")
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01")),origin="1970-01-01")
as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01"))
as.Date(1999-02-10, origin="1970-01-01")
as.Date(1999-02-10)
}
}
{}
}
as.Date(1999-02-10)
as.Date(as.numeric(as.Date(1999-02-10, origin="1970-01-01")-as.Date(1989-02-10, origin="1970-01-01")),origin="1970-01-01")
as.Date(as.numeric(as.Date("1999-02-10", origin="1970-01-01")-as.Date("1989-02-10", origin="1970-01-01")),origin="1970-01-01")
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame(nrow=n,ncol=2)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(as.numeric(as.Date(StartDate), origin="1970-01-01"), origin="1970-01-01")
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
View(TimeSeries)
View(TimeSeries)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame(nrow=n,ncol=2)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(StartDate), origin="1970-01-01")
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
{}
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame(nrow=n,ncol=2)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(StartDate), origin="1970-01-01")
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame(nrow=n,ncol=2)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(StartDate)
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame()
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(StartDate)
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- data.frame(n,n)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i,2]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeSeries[i,1]=as.Date(StartDate)
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
View(TimeSeries)
View(TimeSeries)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- vector(length = n)
TimeVector[]
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- vector(length = n)
TimeVector <-list(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- vector(length = n)
TimeVector <-list(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeVector)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
View(TimeSeries)
View(TimeSeries)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
TimeSeries <- vector(length = n)
TimeVector <-vector(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
TimeSeries[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
class(TimeVector)<-"Date"
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
return(TimeVector)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
TimeSeries
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
Correlations <- vector(length = n)
TimeVector <-vector(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
Correlations[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
class(TimeVector)<-"Date"
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
TimeSeries <- cbind(Correlations,Timevector)
return(TimeSeries)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
Correlations <- vector(length = n)
TimeVector <-vector(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
Correlations[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
class(TimeVector)<-"Date"
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
TimeSeries <- cbind(Correlations,TimeVector)
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
View(TimeSeries)
View(TimeSeries)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
Correlations <- vector(length = n)
TimeVector <-vector(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
Correlations[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(StartDate)
}
class(TimeVector)<-"Date"
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
TimeSeries <- data.frame(TimeVector,Correlations)
return(TimeSeries)
}
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
View(TimeSeries)
View(TimeSeries)
class(TimeSeries[,1])
class(TimeSeries[,2])
plot(TimeSeries[,1],TimeSeries[,2])
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
Correlations <- vector(length = n)
TimeVector <-vector(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
Correlations[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(as.numeric(as.Date(StartDate), origin="1970-01-01")+i-1)
}
class(TimeVector)<-"Date"
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
TimeSeries <- data.frame(TimeVector,Correlations)
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
time_series_generating<-function(Asset1,Asset2,StartDate,EndDate,WindowLength,Lagg){
AbsStart <- min(ret_WTI_fut[,1]) # first date in the vector
AbsEnd <- max(ret_WTI_fut[,1]) # largest date in the vector
if (as.Date(StartDate, origin = "1970-01-01")>as.Date(EndDate, origin = "1970-01-01")){return("StartDate starts after EndDate!")}
if (as.Date(StartDate, origin = "1970-01-01")+Lagg<as.Date(AbsStart, origin = "1970-01-01")){ return("The starting date and the lagg gets out of our dataset!")}
if (as.Date(EndDate, origin = "1970-01-01")+Lagg>as.Date(AbsEnd, origin = "1970-01-01")) {return("The ending date and the lagg gets out of the dataset!")}
for (i in 1:length(Asset1)){# Dávid kódja kevesebb futtatást igényel,de a formátumban nem vagyok biztos ezért most ezt hagyom
if (as.Date(ret_WTI_fut[[i,1]])-as.Date(StartDate, origin = "1970-01-01")==0){
StartDateIndex=i
}
}
#first row if return matrix is NA for each item!
n <- (as.numeric(as.Date(EndDate), origin = "1970-01-01"))-(as.numeric(as.Date(StartDate), origin = "1970-01-01"))-WindowLength #n is the length of the time series ITT BESZARIK MERT NEM JÓ A DÁTUM, RAKJ BELE as.Date()
Correlations <- vector(length = n)
TimeVector <-vector(length=n)
for (i in 1:n){ # calculate the values of the vector for each item
Correlations[i]=cor(Asset1[(StartDateIndex+i-1):(StartDateIndex+i+WindowLength-1)],
Asset2[(StartDateIndex-1+i+Lagg):(StartDateIndex-1+i+Lagg+WindowLength)])
TimeVector[i]=as.Date(as.numeric(as.Date(StartDate), origin="1970-01-01")+i-1, origin="1970-01-01")
}
class(TimeVector)<-"Date"
#please type the dates in this format : "yyyy-mm-dd"
#Lagg can be negative or positive, depends on the direction you want. ex. -5 lagg means that the other vector will be lagged back in time
#Asset1 and Asset2 are integers
TimeSeries <- data.frame(TimeVector,Correlations)
return(TimeSeries)
}
#this function generates the correlation-timeseries table
#first you have to run parameter_lists function to get the parameters (as it was asked in the e-mail)
#the column name's first part shows the unlagged vector,the second part shoes the lagged one
TimeSeries <- time_series_generating(ret_WTI_fut$`2`, ret_WTI_fut$`3`, "2011-05-06", "2014-09-12", 20, 5)
plot(TimeSeries[,1],TimeSeries[,2])
?plot
plot(TimeSeries[,1],TimeSeries[,2],l)
?plot
plot(TimeSeries[,1],TimeSeries[,2],"l")
plot_timeseries<-function(){
ts_1 <- time_series_generating()
}
plot_timeseries<-function(TimeSeries){
plot(TimeSeries[,1],TimeSeries[,2]"l")
}
plot_timeseries<-function(TimeSeries){
plot(TimeSeries[,1],TimeSeries[,2],"l")
}
plot_timeseries()
plot_timeseries(TimeSeries)
plot_timeseries(TimeSeries)
